<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>My Tutors | Learning Scheduler</title>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">

<script src="https://www.gstatic.com/firebasejs/12.2.1/firebase-app-compat.js"></script>
<script src="https://www.gstatic.com/firebasejs/12.2.1/firebase-auth-compat.js"></script>
<script src="https://www.gstatic.com/firebasejs/12.2.1/firebase-firestore-compat.js"></script>

<style>
  /* Your existing CSS styles (trimmed to essentials) */
  :root {
    --primary: #4361ee;
    --primary-light: #6a7eee;
    --primary-dark: #2f4ac0;
    --secondary: #3a0ca3;
    --accent: #f72585;
    --accent-light: #ff5da2;
    --light: #f8f9fa;
    --dark: #212529;
    --dark-light: #424649;
    --success: #4cc9f0;
    --success-light: #7ad7f5;
    --error: #e63946;
    --warning: #ffc107;
    --gray: #6c757d;
    --gray-light: #e9ecef;
    --border-radius: 16px;
    --border-radius-sm: 8px;
    --box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);
    --box-shadow-hover: 0 15px 35px rgba(0, 0, 0, 0.12);
    --transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
    --glass-bg: rgba(255, 255, 255, 0.08);
    --glass-border: rgba(255, 255, 255, 0.1);
  }

  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

  body {
    font-family: 'Poppins', sans-serif;
    background: linear-gradient(135deg, #f5f7fa 0%, #e4e8f0 100%);
    min-height: 100vh;
    color: var(--dark);
    line-height: 1.6;
    overflow-x: hidden;
  }

  .dashboard-container {
    display: flex;
    min-height: 100vh;
  }

  /* Sidebar Styles */
  .sidebar {
    width: 280px;
    background: linear-gradient(to bottom, var(--primary), var(--secondary));
    color: white;
    position: fixed;
    height: 100vh;
    overflow-y: auto;
    transition: var(--transition);
    z-index: 1000;
    box-shadow: var(--box-shadow);
  }

  /* Main Content Styles */
  .main-content {
    flex: 1;
    margin-left: 280px;
    padding: 24px;
    transition: var(--transition);
  }

  .top-bar {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 24px;
    background: white;
    padding: 16px 24px;
    border-radius: var(--border-radius);
    box-shadow: var(--box-shadow);
  }

  .page-title h2 {
    font-size: 24px;
    font-weight: 700;
    color: var(--primary-dark);
  }

  .page-title p {
    color: var(--gray);
    font-size: 14px;
  }

  .top-bar-actions {
    display: flex;
    align-items: center;
    gap: 16px;
  }

  .logout-btn {
    background: var(--primary);
    color: white;
    border: none;
    padding: 10px 16px;
    border-radius: var(--border-radius-sm);
    cursor: pointer;
    font-weight: 500;
    display: flex;
    align-items: center;
    gap: 8px;
    transition: var(--transition);
  }

  .logout-btn:hover {
    background: var(--primary-dark);
  }

  /* Dashboard Sections */
  .dashboard-section {
    display: none;
    background: white;
    border-radius: var(--border-radius);
    box-shadow: var(--box-shadow);
    padding: 24px;
    margin-bottom: 30px;
  }

  .dashboard-section.active {
    display: block;
    animation: fadeIn 0.5s ease;
  }

  .section-header {
    display: flex;
    align-items: center;
    margin-bottom: 24px;
    padding-bottom: 16px;
    border-bottom: 1px solid var(--gray-light);
  }

  .section-header h3 {
    font-size: 20px;
    font-weight: 600;
    color: var(--primary-dark);
    display: flex;
    align-items: center;
    gap: 12px;
  }
  
  /* Tutors Container */
  .tutors-container {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
    gap: 20px;
  }
  
  .tutor-card {
    transition: all 0.3s ease;
    position: relative;
    background: white;
    border-radius: var(--border-radius);
    overflow: hidden;
    box-shadow: var(--box-shadow);
  }
  
  .tutor-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 25px rgba(0,0,0,0.1);
  }
  
  .tutor-avatar img {
    width: 70px;
    height: 70px;
    border-radius: 50%;
    object-fit: cover;
  }
  
  .tutor-header {
    padding: 20px;
    text-align: center;
    background: linear-gradient(to right, var(--primary-light), var(--primary));
    color: white;
  }
  
  .tutor-rating {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
    margin: 10px 0;
  }
  
  .tutor-rating i {
    color: #FFD700; /* Gold color for stars */
  }
  
  .tutor-name {
    font-size: 18px;
    font-weight: 600;
    margin-bottom: 4px;
  }
  
  .tutor-subject {
    font-size: 14px;
    opacity: 0.9;
  }
  
  .tutor-details {
    padding: 20px;
  }
  
  .tutor-details p {
    display: flex;
    align-items: center;
    gap: 8px;
    margin-bottom: 12px;
    color: var(--gray);
  }
  
  /* State styles */
  .loading-state, .empty-state, .error-state {
    text-align: center;
    padding: 40px 20px;
    color: var(--gray);
  }

  .spinner {
    border: 4px solid rgba(0, 0, 0, 0.1);
    border-radius: 50%;
    border-top: 4px solid var(--primary);
    width: 30px;
    height: 30px;
    animation: spin 1s linear infinite;
    margin: 20px auto;
  }

  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>
</head>
<body>
<div class="dashboard-container">
  <aside class="sidebar">
    <div class="sidebar-header">
      <div class="logo">
        <img src="Tklesson3.png" alt="Tklesson Logo">
        <h1>Tklesson</h1>
      </div>
    </div>

    <ul class="sidebar-menu">
      <li class="menu-item">
        <a href="#" class="active">
          <i class="fas fa-user-tie"></i>
          <span>My Tutors</span>
        </a>
      </li>
    </ul>
  </aside>

  <main class="main-content">
    <div class="top-bar">
      <div class="page-title">
        <h2>My Tutors</h2>
        <p>Find and connect with your learning mentors</p>
      </div>
      <div class="top-bar-actions">
        <button class="logout-btn" id="logoutBtn">
          <i class="fas fa-sign-out-alt"></i> Logout
        </button>
      </div>
    </div>

    <section id="tutors" class="dashboard-section active">
      <div class="section-header">
        <h3><i class="fas fa-user-tie"></i> Available Tutors</h3>
      </div>
      <div id="availableTutorsContainer">
        <div class="spinner"></div>
      </div>
    </section>
  </main>
</div>

<script>
// Firebase configuration
const firebaseConfig = {
  apiKey: "AIzaSyBjo5LY4EsFlX8j_8NbLUObooUsCqJM8KM",
  authDomain: "tk-scheduler.firebaseapp.com",
  projectId: "tk-scheduler",
  storageBucket: "tk-scheduler.appspot.com",
  messagingSenderId: "746606755052",
  appId: "1:746606755052:web:d7eae92976cb2f2fa9f9c9",
  measurementId: "G-Q5L607R3N7"
};

// Initialize Firebase with compat version
firebase.initializeApp(firebaseConfig);

// Initialize Firebase services
const auth = firebase.auth();
const db = firebase.firestore();

// Global variables
let currentUser = null;

// Function to fetch and display available and approved tutors
function loadAvailableTutorsList() {
  const container = document.getElementById('availableTutorsContainer');
  container.innerHTML = '<div class="spinner"></div>';
  
  // Query tutors where available is "true" AND approved is true
  db.collection('tutors')
    .where('available', '==', 'true')
    .where('approved', '==', true)
    .get()
    .then(snapshot => {
      if (snapshot.empty) {
        container.innerHTML = '<div class="empty-state"><i class="fas fa-user-slash"></i><h3>No Tutors Available</h3><p>Check back later for available tutors.</p></div>';
        return;
      }
      
      let html = '<div class="tutors-container">';
      snapshot.forEach(doc => {
        const tutor = doc.data();
        html += `
          <div class="tutor-card">
            <div class="tutor-header">
              <div class="tutor-avatar">
                <img src="${tutor.photoURL || 'https://via.placeholder.com/70'}" alt="${tutor.name}">
              </div>
              <h3 class="tutor-name">${tutor.name}</h3>
              <p class="tutor-subject">${tutor.subjects ? tutor.subjects[0] : 'No subject specified'}</p>
              <div class="tutor-rating">
                <i class="fas fa-star"></i>
                <span>${tutor.rating || '4.8'}/5.0</span>
              </div>
            </div>
            <div class="tutor-details">
              <p><i class="fas fa-graduation-cap"></i> ${tutor.qualifications || 'No qualifications listed'}</p>
              <p><i class="fas fa-book"></i> ${tutor.subjects ? tutor.subjects.join(', ') : 'No subjects listed'}</p>
              <p><i class="fas fa-dollar-sign"></i> $${tutor.hourlyRate || '0'}/hour</p>
              <p><i class="fas fa-clock"></i> ${tutor.availability || 'Flexible hours'}</p>
            </div>
          </div>
        `;
      });
      html += '</div>';
      container.innerHTML = html;
    })
    .catch(error => {
      console.error('Error loading tutors:', error);
      container.innerHTML = '<div class="error-state"><i class="fas fa-exclamation-triangle"></i><h3>Error Loading Tutors</h3><p>Please try again later.</p></div>';
    });
}

// Logout button
document.getElementById('logoutBtn').addEventListener('click', function() {
  auth.signOut().then(() => {
    window.location.href = 'student-login.html';
  });
});

// Authentication state observer
auth.onAuthStateChanged(user => {
  if (user) {
    currentUser = user;
    loadAvailableTutorsList();
  } else {
    // User is signed out, redirect to login
    window.location.href = 'student-login.html';
  }
});
</script>
</body>
</html>
