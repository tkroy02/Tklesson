<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard - Tklesson Premium</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script type="module">
        import { initializeApp } from "https://www.gstatic.com/firebasejs/10.7.1/firebase-app.js";
        import { getAnalytics } from "https://www.gstatic.com/firebasejs/10.7.1/firebase-analytics.js";
        import { getFirestore, collection, getDocs, doc, getDoc, onSnapshot, query, where, orderBy, limit } from "https://www.gstatic.com/firebasejs/10.7.1/firebase-firestore.js";
        import { getAuth, onAuthStateChanged, signOut } from "https://www.gstatic.com/firebasejs/10.7.1/firebase-auth.js";

        const firebaseConfig = {
            apiKey: "AIzaSyDq9F28x6D4ivUJoT3ycHRlU_c-YNctFtE",
            authDomain: "email-notifications-1c77b.firebaseapp.com",
            projectId: "email-notifications-1c77b",
            storageBucket: "email-notifications-1c77b.firebasestorage.app",
            messagingSenderId: "272046681025",
            appId: "1:272046681025:web:e0aff95e41caa65c6d1d40",
            measurementId: "G-B3VJ7R5R8H"
        };

        const app = initializeApp(firebaseConfig);
        const analytics = getAnalytics(app);
        const db = getFirestore(app);
        const auth = getAuth(app);

        // Make Firebase available globally
        window.firebaseApp = app;
        window.firebaseDB = db;
        window.firebaseAuth = auth;
    </script>
    <style>
        :root {
            --primary: #6366f1;
            --primary-dark: #4f46e5;
            --primary-light: #8b5cf6;
            --secondary: #06d6a0;
            --accent: #ef476f;
            --warning: #ffd166;
            --dark: #1e293b;
            --dark-light: #334155;
            --light: #f8fafc;
            --gray: #64748b;
            --gray-light: #cbd5e1;
            --shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1);
            --shadow-lg: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
            --gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            --gradient-primary: linear-gradient(135deg, var(--primary) 0%, var(--primary-light) 100%);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', 'Segoe UI', system-ui, sans-serif;
            background: var(--light);
            color: var(--dark);
            line-height: 1.6;
        }

        .admin-container {
            display: grid;
            grid-template-columns: 280px 1fr;
            min-height: 100vh;
        }

        /* Enhanced Sidebar */
        .admin-sidebar {
            background: var(--dark);
            color: white;
            padding: 2rem 1.5rem;
            position: fixed;
            width: 280px;
            height: 100vh;
            overflow-y: auto;
            box-shadow: var(--shadow-lg);
            z-index: 1000;
        }

        .admin-logo {
            text-align: center;
            margin-bottom: 3rem;
            padding-bottom: 1.5rem;
            border-bottom: 2px solid var(--primary);
        }

        .admin-logo h1 {
            font-size: 1.8rem;
            background: var(--gradient-primary);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            font-weight: 700;
        }

        .admin-logo small {
            color: var(--gray-light);
            font-size: 0.9rem;
        }

        .admin-nav ul {
            list-style: none;
        }

        .admin-nav li {
            margin-bottom: 0.75rem;
        }

        .admin-nav a {
            display: flex;
            align-items: center;
            gap: 1rem;
            padding: 1rem 1.25rem;
            color: var(--gray-light);
            text-decoration: none;
            border-radius: 12px;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            font-weight: 500;
        }

        .admin-nav a:hover {
            background: var(--dark-light);
            color: white;
            transform: translateX(8px);
        }

        .admin-nav a.active {
            background: var(--gradient-primary);
            color: white;
            box-shadow: var(--shadow);
            transform: translateX(8px);
        }

        .admin-nav i {
            width: 20px;
            text-align: center;
        }

        /* Main Content */
        .admin-main {
            grid-column: 2;
            background: var(--light);
            padding: 2rem 3rem;
        }

        .admin-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 3rem;
            padding: 1.5rem 0;
            border-bottom: 1px solid var(--gray-light);
        }

        .admin-header h1 {
            font-size: 2.5rem;
            font-weight: 700;
            background: var(--gradient-primary);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .admin-actions {
            display: flex;
            gap: 1rem;
            align-items: center;
        }

        .admin-search {
            position: relative;
        }

        .admin-search input {
            padding: 0.75rem 1rem 0.75rem 2.5rem;
            border: 1px solid var(--gray-light);
            border-radius: 10px;
            background: white;
            width: 300px;
            font-size: 0.9rem;
        }

        .admin-search i {
            position: absolute;
            left: 1rem;
            top: 50%;
            transform: translateY(-50%);
            color: var(--gray);
        }

        /* Enhanced Stats Grid */
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 1.5rem;
            margin-bottom: 3rem;
        }

        .stat-card {
            background: white;
            padding: 2rem;
            border-radius: 16px;
            box-shadow: var(--shadow);
            border-left: 4px solid;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .stat-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: inherit;
            border-left: none;
        }

        .stat-card:hover {
            transform: translateY(-5px);
            box-shadow: var(--shadow-lg);
        }

        .stat-card.revenue { border-left-color: var(--secondary); }
        .stat-card.users { border-left-color: var(--primary); }
        .stat-card.subscriptions { border-left-color: var(--accent); }
        .stat-card.courses { border-left-color: var(--warning); }

        .stat-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1rem;
        }

        .stat-icon {
            width: 50px;
            height: 50px;
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
        }

        .stat-card.revenue .stat-icon { background: rgba(6, 214, 160, 0.1); color: var(--secondary); }
        .stat-card.users .stat-icon { background: rgba(99, 102, 241, 0.1); color: var(--primary); }
        .stat-card.subscriptions .stat-icon { background: rgba(239, 71, 111, 0.1); color: var(--accent); }
        .stat-card.courses .stat-icon { background: rgba(255, 209, 102, 0.1); color: var(--warning); }

        .stat-value {
            font-size: 2.5rem;
            font-weight: 700;
            margin-bottom: 0.5rem;
        }

        .stat-label {
            color: var(--gray);
            font-size: 0.9rem;
            font-weight: 500;
        }

        .stat-trend {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            font-size: 0.85rem;
            font-weight: 600;
            margin-top: 0.5rem;
        }

        .trend-up { color: var(--secondary); }
        .trend-down { color: var(--accent); }

        /* Charts Section */
        .charts-section {
            display: grid;
            grid-template-columns: 2fr 1fr;
            gap: 2rem;
            margin-bottom: 3rem;
        }

        .chart-card {
            background: white;
            padding: 2rem;
            border-radius: 16px;
            box-shadow: var(--shadow);
        }

        .chart-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1.5rem;
        }

        .chart-header h3 {
            font-size: 1.25rem;
            font-weight: 600;
            color: var(--dark);
        }

        .chart-container {
            height: 300px;
            position: relative;
        }

        /* Enhanced Tables */
        .tables-section {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 2rem;
            margin-bottom: 3rem;
        }

        .table-card {
            background: white;
            padding: 2rem;
            border-radius: 16px;
            box-shadow: var(--shadow);
        }

        .table-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1.5rem;
        }

        .table-header h3 {
            font-size: 1.25rem;
            font-weight: 600;
        }

        .btn {
            padding: 0.75rem 1.5rem;
            background: var(--gradient-primary);
            color: white;
            border: none;
            border-radius: 10px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .btn:hover {
            transform: translateY(-2px);
            box-shadow: var(--shadow);
        }

        table {
            width: 100%;
            border-collapse: collapse;
        }

        th, td {
            padding: 1rem;
            text-align: left;
            border-bottom: 1px solid var(--gray-light);
        }

        th {
            background: var(--light);
            color: var(--gray);
            font-weight: 600;
            font-size: 0.9rem;
        }

        tr:hover {
            background: var(--light);
        }

        .badge {
            padding: 0.4rem 0.8rem;
            border-radius: 20px;
            font-size: 0.75rem;
            font-weight: 600;
        }

        .badge-success { background: rgba(6, 214, 160, 0.1); color: var(--secondary); }
        .badge-warning { background: rgba(255, 209, 102, 0.1); color: #e6a700; }
        .badge-danger { background: rgba(239, 71, 111, 0.1); color: var(--accent); }

        /* Quick Actions */
        .quick-actions {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1.5rem;
        }

        .action-card {
            background: white;
            padding: 2rem;
            border-radius: 16px;
            box-shadow: var(--shadow);
            text-align: center;
            cursor: pointer;
            transition: all 0.3s ease;
            border: 2px solid transparent;
        }

        .action-card:hover {
            transform: translateY(-8px);
            box-shadow: var(--shadow-lg);
            border-color: var(--primary);
        }

        .action-icon {
            width: 60px;
            height: 60px;
            border-radius: 16px;
            background: var(--gradient-primary);
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 1rem;
            font-size: 1.5rem;
            color: white;
        }

        .action-card h4 {
            font-size: 1.1rem;
            font-weight: 600;
            margin-bottom: 0.5rem;
        }

        .action-card p {
            color: var(--gray);
            font-size: 0.9rem;
        }

        /* Loading States */
        .loading {
            opacity: 0.6;
            pointer-events: none;
        }

        .pulse {
            animation: pulse 2s infinite;
        }

        @keyframes pulse {
            0% { opacity: 1; }
            50% { opacity: 0.5; }
            100% { opacity: 1; }
        }
    </style>
</head>
<body>
    <div class="admin-container">
        <!-- Enhanced Sidebar -->
        <aside class="admin-sidebar">
            <div class="admin-logo">
                <h1><i class="fas fa-crown"></i> Tklesson Admin</h1>
                <small>Premium Education Platform</small>
            </div>
            
            <nav class="admin-nav">
                <ul>
                    <li><a href="#" class="active"><i class="fas fa-chart-line"></i> Dashboard</a></li>
                    <li><a href="#"><i class="fas fa-users"></i> Students</a></li>
                    <li><a href="#"><i class="fas fa-book-open"></i> Courses</a></li>
                    <li><a href="#"><i class="fas fa-money-bill-wave"></i> Revenue</a></li>
                    <li><a href="#"><i class="fas fa-chart-bar"></i> Analytics</a></li>
                    <li><a href="#"><i class="fas fa-cog"></i> Settings</a></li>
                    <li><a href="#" id="logout-btn"><i class="fas fa-sign-out-alt"></i> Logout</a></li>
                </ul>
            </nav>
        </aside>

        <!-- Main Content -->
        <main class="admin-main">
            <header class="admin-header">
                <div>
                    <h1>Admin Dashboard</h1>
                    <p style="color: var(--gray); margin-top: 0.5rem;">Welcome back! Here's what's happening with your platform.</p>
                </div>
                <div class="admin-actions">
                    <div class="admin-search">
                        <i class="fas fa-search"></i>
                        <input type="text" placeholder="Search analytics...">
                    </div>
                    <div class="admin-user">
                        <span style="margin-right: 1rem; color: var(--gray);">Platform Owner</span>
                    </div>
                </div>
            </header>

            <!-- Enhanced Stats Grid -->
            <div class="stats-grid">
                <div class="stat-card revenue">
                    <div class="stat-header">
                        <div>
                            <div class="stat-value" id="total-revenue">$0</div>
                            <div class="stat-label">Total Revenue</div>
                            <div class="stat-trend trend-up">
                                <i class="fas fa-arrow-up"></i>
                                <span id="revenue-trend">0%</span>
                            </div>
                        </div>
                        <div class="stat-icon">
                            <i class="fas fa-dollar-sign"></i>
                        </div>
                    </div>
                </div>

                <div class="stat-card users">
                    <div class="stat-header">
                        <div>
                            <div class="stat-value" id="total-users">0</div>
                            <div class="stat-label">Total Students</div>
                            <div class="stat-trend trend-up">
                                <i class="fas fa-arrow-up"></i>
                                <span id="users-trend">0%</span>
                            </div>
                        </div>
                        <div class="stat-icon">
                            <i class="fas fa-users"></i>
                        </div>
                    </div>
                </div>

                <div class="stat-card subscriptions">
                    <div class="stat-header">
                        <div>
                            <div class="stat-value" id="active-subscriptions">0</div>
                            <div class="stat-label">Active Subscriptions</div>
                            <div class="stat-trend trend-up">
                                <i class="fas fa-arrow-up"></i>
                                <span id="subs-trend">0%</span>
                            </div>
                        </div>
                        <div class="stat-icon">
                            <i class="fas fa-gem"></i>
                        </div>
                    </div>
                </div>

                <div class="stat-card courses">
                    <div class="stat-header">
                        <div>
                            <div class="stat-value" id="total-enrollments">0</div>
                            <div class="stat-label">Course Enrollments</div>
                            <div class="stat-trend trend-up">
                                <i class="fas fa-arrow-up"></i>
                                <span id="enrollments-trend">0%</span>
                            </div>
                        </div>
                        <div class="stat-icon">
                            <i class="fas fa-book"></i>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Charts Section -->
            <div class="charts-section">
                <div class="chart-card">
                    <div class="chart-header">
                        <h3>Revenue Overview</h3>
                        <select class="btn" style="background: white; color: var(--dark);">
                            <option>Last 7 Days</option>
                            <option>Last 30 Days</option>
                            <option>Last 90 Days</option>
                        </select>
                    </div>
                    <div class="chart-container">
                        <canvas id="revenueChart"></canvas>
                    </div>
                </div>

                <div class="chart-card">
                    <div class="chart-header">
                        <h3>Platform Growth</h3>
                    </div>
                    <div class="chart-container">
                        <canvas id="growthChart"></canvas>
                    </div>
                </div>
            </div>

            <!-- Data Tables -->
            <div class="tables-section">
                <div class="table-card">
                    <div class="table-header">
                        <h3>Recent Enrollments</h3>
                        <button class="btn">View All</button>
                    </div>
                    <div id="recent-enrollments">
                        <table>
                            <thead>
                                <tr>
                                    <th>Student</th>
                                    <th>Course</th>
                                    <th>Date</th>
                                    <th>Status</th>
                                </tr>
                            </thead>
                            <tbody id="enrollments-body">
                                <!-- Dynamic content -->
                            </tbody>
                        </table>
                    </div>
                </div>

                <div class="table-card">
                    <div class="table-header">
                        <h3>Top Courses</h3>
                        <button class="btn">View Report</button>
                    </div>
                    <div id="top-courses">
                        <table>
                            <thead>
                                <tr>
                                    <th>Course</th>
                                    <th>Enrollments</th>
                                    <th>Revenue</th>
                                    <th>Rating</th>
                                </tr>
                            </thead>
                            <tbody id="courses-body">
                                <!-- Dynamic content -->
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

            <!-- Quick Actions -->
            <div class="quick-actions">
                <div class="action-card" onclick="showModal('addCourse')">
                    <div class="action-icon">
                        <i class="fas fa-plus"></i>
                    </div>
                    <h4>Add Course</h4>
                    <p>Create new learning content</p>
                </div>
                <div class="action-card" onclick="showModal('exportData')">
                    <div class="action-icon">
                        <i class="fas fa-file-export"></i>
                    </div>
                    <h4>Export Data</h4>
                    <p>Download platform analytics</p>
                </div>
                <div class="action-card" onclick="showModal('sendNotification')">
                    <div class="action-icon">
                        <i class="fas fa-bell"></i>
                    </div>
                    <h4>Send Alert</h4>
                    <p>Notify all students</p>
                </div>
                <div class="action-card" onclick="showModal('manageUsers')">
                    <div class="action-icon">
                        <i class="fas fa-user-cog"></i>
                    </div>
                    <h4>Manage Users</h4>
                    <p>Student administration</p>
                </div>
            </div>
        </main>
    </div>

    <script>
        class AdminDashboard {
            constructor() {
                this.db = window.firebaseDB;
                this.auth = window.firebaseAuth;
                this.init();
            }

            async init() {
                await this.checkAuth();
                this.setupCharts();
                this.loadDashboardData();
                this.setupEventListeners();
                this.setupRealTimeListeners();
            }

            async checkAuth() {
                return new Promise((resolve) => {
                    this.auth.onAuthStateChanged((user) => {
                        if (!user) {
                            window.location.href = 'login.html';
                        }
                        resolve(user);
                    });
                });
            }

            setupCharts() {
                // Revenue Chart
                this.revenueChart = new Chart(document.getElementById('revenueChart'), {
                    type: 'line',
                    data: {
                        labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],
                        datasets: [{
                            label: 'Revenue',
                            data: [12000, 19000, 15000, 25000, 22000, 30000],
                            borderColor: '#06d6a0',
                            backgroundColor: 'rgba(6, 214, 160, 0.1)',
                            tension: 0.4,
                            fill: true
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: { display: false }
                        }
                    }
                });

                // Growth Chart
                this.growthChart = new Chart(document.getElementById('growthChart'), {
                    type: 'doughnut',
                    data: {
                        labels: ['Active', 'New', 'Returning'],
                        datasets: [{
                            data: [60, 25, 15],
                            backgroundColor: ['#06d6a0', '#6366f1', '#ef476f']
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        cutout: '70%'
                    }
                });
            }

            async loadDashboardData() {
                try {
                    // Load users count
                    const usersSnapshot = await getDocs(collection(this.db, "users"));
                    const totalUsers = usersSnapshot.size;
                    
                    // Load enrollments count
                    let totalEnrollments = 0;
                    for (const userDoc of usersSnapshot.docs) {
                        const enrollmentsSnapshot = await getDocs(
                            collection(this.db, "users", userDoc.id, "enrolledCourses")
                        );
                        totalEnrollments += enrollmentsSnapshot.size;
                    }

                    // Update UI with real data
                    this.updateStats({
                        totalUsers: totalUsers,
                        totalEnrollments: totalEnrollments,
                        activeSubscriptions: Math.floor(totalUsers * 0.7), // Estimate 70% active
                        totalRevenue: totalEnrollments * 150 // Estimate $150 per enrollment
                    });

                    // Load recent enrollments
                    await this.loadRecentEnrollments();
                    
                    // Load top courses
                    await this.loadTopCourses();

                } catch (error) {
                    console.error('Error loading dashboard data:', error);
                    // Fallback to demo data
                    this.loadDemoData();
                }
            }

            updateStats(data) {
                document.getElementById('total-users').textContent = data.totalUsers.toLocaleString();
                document.getElementById('total-enrollments').textContent = data.totalEnrollments.toLocaleString();
                document.getElementById('active-subscriptions').textContent = data.activeSubscriptions.toLocaleString();
                document.getElementById('total-revenue').textContent = this.formatCurrency(data.totalRevenue);
            }

            async loadRecentEnrollments() {
                // This would need a proper query to get recent enrollments
                // For now, using mock data
                const enrollmentsBody = document.getElementById('enrollments-body');
                enrollmentsBody.innerHTML = `
                    <tr>
                        <td>john@example.com</td>
                        <td>AP Physics 1</td>
                        <td>2024-01-15</td>
                        <td><span class="badge badge-success">Active</span></td>
                    </tr>
                    <tr>
                        <td>sarah@example.com</td>
                        <td>AP Calculus</td>
                        <td>2024-01-15</td>
                        <td><span class="badge badge-success">Active</span></td>
                    </tr>
                    <tr>
                        <td>mike@example.com</td>
                        <td>Chemistry Grade 11</td>
                        <td>2024-01-14</td>
                        <td><span class="badge badge-warning">Pending</span></td>
                    </tr>
                `;
            }

            async loadTopCourses() {
                // This would aggregate course enrollment data
                // For now, using mock data
                const coursesBody = document.getElementById('courses-body');
                coursesBody.innerHTML = `
                    <tr>
                        <td>AP Physics 1</td>
                        <td>347</td>
                        <td>$52,050</td>
                        <td>4.8</td>
                    </tr>
                    <tr>
                        <td>AP Calculus</td>
                        <td>298</td>
                        <td>$44,700</td>
                        <td>4.7</td>
                    </tr>
                    <tr>
                        <td>Chemistry Grade 11</td>
                        <td>234</td>
                        <td>$35,100</td>
                        <td>4.6</td>
                    </tr>
                `;
            }

            setupRealTimeListeners() {
                // Real-time listener for new users
                onSnapshot(collection(this.db, "users"), (snapshot) => {
                    const userCount = snapshot.size;
                    document.getElementById('total-users').textContent = userCount.toLocaleString();
                });
            }

            setupEventListeners() {
                document.getElementById('logout-btn').addEventListener('click', (e) => {
                    e.preventDefault();
                    this.logout();
                });
            }

            async logout() {
                try {
                    await signOut(this.auth);
                    window.location.href = 'login.html';
                } catch (error) {
                    console.error('Logout error:', error);
                }
            }

            formatCurrency(amount) {
                return '$' + amount.toLocaleString();
            }

            loadDemoData() {
                // Fallback demo data
                this.updateStats({
                    totalUsers: 2847,
                    totalEnrollments: 8562,
                    activeSubscriptions: 1234,
                    totalRevenue: 12847
                });
            }
        }

        function showModal(type) {
            alert(`Opening ${type} modal - This would show a detailed interface`);
        }

        // Initialize dashboard
        document.addEventListener('DOMContentLoaded', () => {
            new AdminDashboard();
        });
    </script>
</body>
</html>
